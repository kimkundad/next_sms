import React, { useEffect, Fragment, useState } from "react";
    import axios from 'axios';
    import ReactPaginate from 'react-paginate';
    import { useRouter } from 'next/router'
    import Item_blog from "@components/item_blog/index";
    import Card from "@components/card";
    import Head from "next/head";
import Layouts from "@components/layouts/index";
import {
  Flex,
  Heading,
  Box,
  Link,
  Spacer,
  Text,
  Input,
  Grid,
  GridItem,
  Tabs,
  TabList,
  TabPanels,
  Tab,
  TabPanel,
  useTab,
  useMultiStyleConfig,
  Button,
  Center,
  Checkbox,
  CheckboxGrou,
  Stack,
  Table,
  Thead,
  Tbody,
  Tfoot,
  Tr,
  Th,
  Td,
  TableCaption,
  TableContainer,
} from "@chakra-ui/react";
    
    
    const Blogs = (props) => {
        const [isLoading, setLoading] = useState(false); //State for the loading indicator
        const startLoading = () => setLoading(true);
        const stopLoading = () => setLoading(false);
        const router = useRouter()
        console.log('api', props)
    		/*
    			Posts fetching happens after page navigation, 
    			so we need to switch Loading state on Router events.
    		*/
        useEffect(() => { //After the component is mounted set router event handlers
          router.events.on('routeChangeStart', startLoading); 
          router.events.on('routeChangeComplete', stopLoading);
    
            return () => {
              router.events.off('routeChangeStart', startLoading);
              router.events.off('routeChangeComplete', stopLoading);
            }
        }, [])
    
    		//When new page selected in paggination, we take current path and query parrams.
    		// Then add or modify page parram and then navigate to the new route.
        const pagginationHandler = (page) => {
            const currentPath = router.pathname;
            const currentQuery = router.query;
            currentQuery.page = page.selected + 1;
    
            router.push({
                pathname: currentPath,
                query: currentQuery,
            });
    
        };
    		
    		//Conditional rendering of the posts list or loading indicator
        let content = null;
        if (isLoading)
            content = <div>Loading...</div>;
        else {
    				//Generating posts list
            content = (
              <>
             {props.posts.map(post => { return <Item_blog key={post.date} image="img1.png" title="SMSPANG กลุ่มเป้าหมายได้ อย่างรวดเร็ว" detail="บริการนี้ใช้ได้เฉพราะในเพจสาธารณะ สามารถเติมยอดได้หากอัตราการลดลง มากกว่า 10 เปอร์เซ็นต์ ขึ้นไป การรับประกันจะขาดทันที " get_href="detail/115" /> })};
              </>
            );
        }
    
        return (
          <Fragment>
          <Head>
            <title>Create Next App</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/favicon.ico" />
          </Head>
          <Layouts>
            <div className="page-hero page-container " id="page-hero">
              <div className="padding text-center">
              <Text fontSize='3xl'>บทความและสาระน่ารู้</Text>
              </div>
            </div>
            <div className="page-content page-container">
            <div className='padding'>
            <div className="row">
                    {content}
                    </div>
                    <ReactPaginate mb='10'
                    previousLabel={'previous'}
                    nextLabel={'next'}
                    breakLabel={'...'}
                    breakClassName={'break-me'}
                    activeClassName={'active'}
                    containerClassName={'pagination'}
                    subContainerClassName={'pages pagination'}
    
                    initialPage={props.currentPage - 1}
                    pageCount={props.pageCount}
                    marginPagesDisplayed={2}
                    pageRangeDisplayed={5}
                    onPageChange={pagginationHandler}
                />
                <Box h='20' />
                </div>
                </div>
            </Layouts>
        </Fragment>
        );
    };



    export async function getServerSideProps({ query }) {
        const page = query.page || 1; //if page empty we request the first page
        const posts = await axios.get(`https://gorest.co.in/public-api/posts?_format=json&access-token=cxzNs8fYiyxlk708IHfveKM1z1xxYZw99fYE&page=${page}`);

          console.log('***', posts)
        
          return {
            props: {
                totalCount: posts.data.meta.pagination.total,
                pageCount: posts.data.meta.pagination.pages,
                currentPage: posts.data.meta.pagination.page,
                posts: posts.data.data,
            }
          }
        }
        
    export default Blogs
    
